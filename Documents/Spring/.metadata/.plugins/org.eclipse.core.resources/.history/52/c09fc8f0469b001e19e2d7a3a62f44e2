package entity;

import java.util.Collection;
import java.util.List;

import javax.management.relation.Role;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

import jakarta.persistence.Entity;
import jakarta.persistence.EnumType;
import jakarta.persistence.Enumerated;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Builder // contruction de l'objet de maniere simple
@AllArgsConstructor
@NoArgsConstructor
@Data // permet de générer getters et setters
@Entity
@Table
public class User implements UserDetails
{
	@Id
	@GeneratedValue
	private Integer id;
	
	private String firstname;
	
	private String lastname;
	
	private String email;
	
	private String password;
	
	
	@Enumerated(EnumType.STRING)
	private Role role;
	
	// should return a liste of roles
	@Override
	public Collection<? extends GrantedAuthority> getAuthorities() {
		// L'utilisateur ne peut avoir qu'un seul role
		return List.of(new SimpleGrantedAuthority(role.getRoleName()));
	}

	@Override
	public String getPassword() {
		// TODO Auto-generated method stub
		return password;
	}

	@Override
	public String getUsername() {
		// Pour nous le username, c'est l'email
		return email;
	}
	
	// compte nom expiré
	@Override
	public boolean isAccountNonExpired() {
		// TODO Auto-generated method stub
		return true;
	}
	
	// locked: vérouiller
	@Override
	public boolean isAccountNonLocked() {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	public boolean isCredentialsNonExpired() {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	public boolean isEnabled() {
		// TODO Auto-generated method stub
		return true;
	}
}
